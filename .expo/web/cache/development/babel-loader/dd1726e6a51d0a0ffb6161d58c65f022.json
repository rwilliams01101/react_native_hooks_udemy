{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\R. Alan Williams\\\\Desktop\\\\Professional_Materials\\\\ProDevelopment\\\\Udemy\\\\react_native_hooks_udemy\\\\src\\\\screens\\\\CounterScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport DeprecatedViewPropTypes from \"react-native/Libraries/DeprecatedPropTypes/DeprecatedViewPropTypes\";\n\nvar reducer = function reducer(state, action) {\n  switch (action.type) {\n    case \"increment\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count + action.payload\n      });\n\n    case \"decrement\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count - action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar CounterScreen = function CounterScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useReducer = useReducer(reducer, {\n    count: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var counter = state.counter;\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Increase\",\n    onPress: function onPress() {\n      dispatch({\n        type: \"increment\",\n        payload: 1\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    title: \"Decrease\",\n    onPress: function onPress() {\n      dispatch({\n        type: \"decrement\",\n        payload: 1\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Current Count: \", state.count, \" \"));\n};\n\nvar styles = StyleSheet.create({});\nexport default CounterScreen;","map":{"version":3,"sources":["C:/Users/R. Alan Williams/Desktop/Professional_Materials/ProDevelopment/Udemy/react_native_hooks_udemy/src/screens/CounterScreen.js"],"names":["React","useReducer","DeprecatedViewPropTypes","reducer","state","action","type","count","payload","CounterScreen","dispatch","counter","styles","StyleSheet","create"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;;;;AAEA,OAAOC,uBAAP,MAAoC,oEAApC;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAGjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,6CAAYF,KAAZ;AAAmBG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAcF,MAAM,CAACG;AAA/C;;AACF,SAAK,WAAL;AACE,6CAAYJ,KAAZ;AAAmBG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAcF,MAAM,CAACG;AAA/C;;AACF;AACE,aAAOJ,KAAP;AANJ;AAQD,CAXD;;AAaA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,OAAQ;AAAA;;AAAA,oBACFR,UAAU,CAACE,OAAD,EAAU;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAAV,CADR;AAAA;AAAA,MACrBH,KADqB;AAAA,MACdM,QADc;;AAAA,MAEpBC,OAFoB,GAERP,KAFQ,CAEpBO,OAFoB;AAI5B,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbD,MAAAA,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE,WAAR;AAAqBE,QAAAA,OAAO,EAAE;AAA9B,OAAD,CAAR;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbE,MAAAA,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE,WAAR;AAAqBE,QAAAA,OAAO,EAAE;AAA9B,OAAD,CAAR;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAaE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsBJ,KAAK,CAACG,KAA5B,MAbF,CADF;AAiBD,CArBD;;AAuBA,IAAMK,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB,EAAlB,CAAf;AAEA,eAAeL,aAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\nimport { View, Text, StyleSheet, Button } from \"react-native\";\r\nimport DeprecatedViewPropTypes from \"react-native/Libraries/DeprecatedPropTypes/DeprecatedViewPropTypes\";\r\n\r\nconst reducer = (state, action) => {\r\n  // state { count: number }\r\n  // action { type: 'increment' || 'decrement' }\r\n  switch (action.type) {\r\n    case \"increment\":\r\n      return { ...state, count: state.count + action.payload };\r\n    case \"decrement\":\r\n      return { ...state, count: state.count - action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst CounterScreen = ({}) => {\r\n  const [state, dispatch] = useReducer(reducer, { count: 0 });\r\n  const { counter } = state;\r\n\r\n  return (\r\n    <View>\r\n      <Button\r\n        title=\"Increase\"\r\n        onPress={() => {\r\n          dispatch({ type: \"increment\", payload: 1 });\r\n        }}\r\n      />\r\n      <Button\r\n        title=\"Decrease\"\r\n        onPress={() => {\r\n          dispatch({ type: \"decrement\", payload: 1 });\r\n        }}\r\n      />\r\n      <Text>Current Count: {state.count} </Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({});\r\n\r\nexport default CounterScreen;\r\n"]},"metadata":{},"sourceType":"module"}